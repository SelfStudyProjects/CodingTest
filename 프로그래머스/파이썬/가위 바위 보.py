def solution(rsp):
    answer = ''
    for i in range(len(rsp)): # 문제가 발생한 코드
        if rsp[i] == "2":
            answer += str(0)
        elif rsp[i] == "0":
            answer += str(5)
        else:
            answer += str(2)
    return answer

### 파이썬 `for` 루프 및 조건문 비교 분석

전에 `TypeError`가 났던 코드와 지금 잘 작동하는 코드 사이에는 크게 두 가지 핵심적인 차이가 있었어! 바로 `for` 루프의 사용법과 조건문에서의 타입 비교 방식이야.

| 구분                  | 문제 발생 코드                       | 해결된 코드                          | 설명                                                                                                                                              |
| :-------------------- | :----------------------------------- | :----------------------------------- | :------------------------------------------------------------------------------------------------------------------------------------------------------ |
| **`for` 루프 대상**   | `for i in len(rsp):`                 | `for i in range(len(rsp)):`         | `len(rsp)`는 `int`(정수) 타입. 파이썬은 정수를 직접 순회할 수 없어(`not iterable`). <br> `range(len(rsp))`는 순회 가능한 `range` 객체를 만들어 인덱스(0부터 길이-1)를 순차적으로 반환해줘. |
| **조건문 비교 타입**  | `if rsp[i] == 2:` (또는 0, 5)        | `if rsp[i] == "2":` (또는 "0", "5") | `rsp[i]`는 문자열에서 추출한 '문자열' 타입(`"2"`, `"0"`, `"5"`). <br> 이를 정수 `2`, `0`, `5`와 비교하면 항상 `False`가 되거나 의도치 않은 결과가 나옴. <br> 반드시 같은 '문자열' 타입과 비교해야 정확한 논리 판단이 가능해!                     |

---

**요약하자면:**

`TypeError`는 `len(rsp)`가 정수인데, 파이썬이 정수를 `for` 루프에서 순회하려고 했기 때문에 발생했던 거고, 조건문 (`if rsp[i] == 2`)의 논리 오류는 `rsp[i]`가 문자열인데 정수랑 비교해서 원치 않는 결과가 나오게 되는 부분이었어.

이제 차이점이 명확하게 보이지?! 😉 파이팅!